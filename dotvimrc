" Basic setup
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'

" My bundles
Plugin 'mileszs/ack.vim'
Plugin 'FuzzyFinder'
Plugin 'L9'
Plugin 'bling/vim-airline'
Plugin 'clones/vim-autocomplpop'
Plugin 'cschlueter/vim-wombat'
Plugin 'godlygeek/tabular'
Plugin 'kana/vim-smartinput'
Plugin 'kana/vim-textobj-user'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/gist-vim'

Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

Plugin 'alvan/vim-closetag'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'tomtom/quickfixsigns_vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-git'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/simplefold'
call vundle#end()
filetype plugin indent on 

" My configuration
colorscheme wombat256

runtime macros/matchit.vim

set autoindent
set complete=.,t
set cursorcolumn
set cursorline
set foldmethod=indent
set foldlevel=1
set hidden
set history=1000
set iskeyword-=_,$,@,%,#
set preserveindent
set relativenumber
set ruler
set scrolloff=3
set showmatch
set title
set visualbell
set wildmenu
set wildmode=list:longest
set wrap

syntax on

" Setup backup location and enable
set backup
set backupdir=/tmp
set directory=/tmp

" Set <Leader> to comma
let mapleader = ','

" Change normal mode leader
nnoremap ; :
nnoremap : ;

" Filetype patterns
filetype plugin indent on

" Tab/indentation configuration
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
set ai " autoindent
set si " smartindent

" Search pattern highlight/incremental
set ignorecase
set smartcase
set showmatch
set hlsearch
set incsearch

" alias
ab pry require 'pry';binding.pry

" A few useful shortcuts
command! Rehash source ~/.vimrc
command! Color echo g:colors_name
command! Helptags helptags ~/.vim/doc

" Save when lost focus
au FocusLost * ;wa

" Make the arrow keys switch between splits
map <up> <C-w>k
map <down> <C-w>j
map <right> <C-w>l
map <left> <C-w>h

"toggle unfold
nnoremap <space> za 
vnoremap <space> za 

" Navigation between buffers
map <leader>l ;e#<cr>

" Added non ruby files in ruby syntax
au BufRead,BufNewFile {Procfile,Capfile,Gemfile,Rakefile,Thorfile,config.ru,.caprc,.irbrc,irb_tempfile*} set ft=ruby

" Copy from clipboard
map <leader>pc ;r ! pbpaste<CR>

" FuzzyFinder
let g:fuzzy_ignore = '*.log;*.swp;*~;temp/*;log/*;tmp/*;coverage/*;README;*.jpg;*.png;*.gem'
let g:fuzzy_enumerating_limit = 15
let g:fuzzy_matching_limit = 40
let g:fuzzy_ceiling = 300000
map <leader>bb ;FufBuffer<CR>
map <leader>ff ;FufCoverageFile<CR>

" NERDCommenter
let NERDSpaceDelims = 1
let NERDDefaultNesting = 0

" taglist
let Tlist_Display_Tag_Scope = 0
let Tlist_File_Fold_Auto_Close = 1
let Tlist_Show_Menu = 1
map <Leader>tg ;TlistToggle<CR>
map <Leader>th ;TlistHighlightTag<CR>
map <Leader>tp ;TlistShowPrototype<CR>
map <Leader>tu ;TlistUpdate<CR>

" Gist
let g:gist_clip_command = 'pbcopy'
let g:gist_open_browser_after_post = 1

" Syntastic 
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1

" Command-T
set wildignore+=*.o,*.obj,.git,spec/fixtures/cassetes/**,vendor/**,bin_stubs/**
au BufRead,BufNewFile {Procfile,Capfile,Gemfile,Rakefile,Thorfile,config.ru,.caprc,.irbrc,irb_tempfile*} set ft=ruby

" Redraw panel when terminal mess up
nnoremap <leader>rr ;redraw!<cr>

" Airline
set laststatus=2
