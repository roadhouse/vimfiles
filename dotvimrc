" Basic setup
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'gmarik/Vundle.vim'

" My bundles
Plugin 'mileszs/ack.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'L9'
Plugin 'itchyny/lightline.vim'
Plugin 'clones/vim-autocomplpop'
Plugin 'cschlueter/vim-wombat'
Plugin 'kana/vim-smartinput'
Plugin 'kana/vim-textobj-user'
Plugin 'mattn/gist-vim'
Plugin 'ngmy/vim-rubocop'
Plugin 'mattn/webapi-vim'
Plugin 'kassio/neoterm'

" Snippets
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

Plugin 'alvan/vim-closetag'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/simplefold'
Plugin 'danro/rename.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-dispatch'

" Javascript
Plugin 'pangloss/vim-javascript'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'MaxMEllon/vim-jsx-pretty'




call vundle#end()
filetype plugin indent on

" My configuration
colorscheme wombat256

runtime macros/matchit.vim

set autoindent
set complete=.,t
set cursorcolumn
set cursorline
set foldmethod=indent
set foldlevel=1
set hidden
set history=1000
set iskeyword+=_,@-@,?,!
set number
set preserveindent
set relativenumber
set ruler
set scrolloff=3
set showmatch
set title
set visualbell
set wildmenu
set wildmode=list:longest
set wrap
set colorcolumn=80

syntax on

" Setup backup location and enable
set backup
set backupdir=/tmp
set directory=/tmp

" Set <Leader> to comma
let mapleader = ','

" Change normal mode leader
nnoremap ; :
nnoremap : ;

" Filetype patterns
filetype plugin indent on

" Tab/indentation configuration
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
set ai " autoindent
set si " smartindent

" Search pattern highlight/incremental
set ignorecase
set smartcase
set showmatch
set hlsearch
set incsearch

" alias
ab pry require 'pry';binding.pry

" A few useful shortcuts
command! Rehash source ~/.vimrc
command! Color echo g:colors_name
command! Helptags helptags ~/.vim/doc
command! -range=% RubyNewHashNotation silent execute <line1>.','.<line2>.'s/:\(\w\+\)\s*=>\s*/\1: /g'

" Save when lost focus
au FocusLost * ;wa

" remove all trailing whitespace when :w
autocmd BufWritePre * :%s/\s\+$//e

" Make the arrow keys switch between splits
map <up> <C-w>k
map <down> <C-w>j
map <right> <C-w>l
map <left> <C-w>h

"toggle unfold
nnoremap <space> za
vnoremap <space> za

" Navigation between buffers
map <leader>l ;e#<cr>

" Added non ruby files in ruby syntax
au BufRead,BufNewFile {Procfile,Capfile,Gemfile,Rakefile,Thorfile,config.ru,.caprc,.irbrc,irb_tempfile*} set ft=ruby

" Copy from clipboard
map <leader>pc ;r ! pbpaste<CR>

" FuzzyFinder
let g:fuzzy_ignore = '*.log;*.swp;*~;temp/*;log/*;tmp/*;coverage/*;**//node_modules/*;README;*.jpg;*.png;*.gem'
let g:fuzzy_enumerating_limit = 15
let g:fuzzy_matching_limit = 40
let g:fuzzy_ceiling = 300000
map <leader>bb ;FufBuffer<CR>
map <leader>ff ;FufCoverageFile<CR>

" NERDCommenter
let NERDSpaceDelims = 1
let NERDDefaultNesting = 0

" Gist
let g:gist_clip_command = 'pbcopy'
let g:gist_open_browser_after_post = 1

" Syntastic
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1

set wildignore+=*.o,*.obj,.git,*/spec/cassettes/**,*/vendor/**,*/bin_stubs/**,*/tmp/**,*/log/**,*/node_modules/**
au BufRead,BufNewFile {Procfile,Capfile,Gemfile,Rakefile,Thorfile,config.ru,.caprc,.irbrc,irb_tempfile*} set ft=ruby

" Redraw panel when terminal mess up
nnoremap <leader>rr ;redraw!<cr>

" Airline
set laststatus=2

let g:javascript_conceal_function   = "ƒ"
let g:javascript_conceal_null       = "ø"
let g:javascript_conceal_this       = "@"
let g:javascript_conceal_return     = "⇚"
let g:javascript_conceal_undefined  = "¿"
let g:javascript_conceal_NaN        = "ℕ"
let g:javascript_conceal_prototype  = "¶"
let g:javascript_conceal_static     = "•"
let g:javascript_conceal_super      = "Ω"

let g:angular_source_directory = 'app/assets/javascripts/'
let g:angular_test_directory = 'spec/javascripts/'

let g:ctrlp_working_path_mode = 'ra'

let g:gist_post_private = 1

" Vim-rspec
let g:rspec_command = "Dispatch rspec {spec}"
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
" map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>
